@model IEnumerable<Student>

@{
    ViewData["Title"] = "غيابُ الفصل لكُل طالبٍ فيه";
}

<style>
    #logo {
        display: none;
    }
</style>

<nav class="navbar navbar-expand-sm navbar-dark justify-content-center" id="theNewNavBar">

    <ul class="navbar-nav">

        <li class="nav-item list-inline-item">
            <a class="nav-link" href="/Stage/Index" tabindex="2"><i class="fas fa-university" title="السنواتُ الدراسيّة"></i></a>
        </li>

        <li class="nav-item list-inline-item">
            <a class="nav-link" onkeypress="goStage()" onclick="goStage()" tabindex="2"><i class="fas fa-chalkboard-teacher" title="الفُصول الدراسيّة"></i></a>
        </li>

    </ul>

    <a class="fas fa-user-cog" asp-action="AccountInfo" asp-controller="Account" tabindex="4" title="تعديلاتٌ في الحسابِ الخاص بك"></a>

    <a asp-action="Logout" asp-controller="Account" class="fas fa-sign-out-alt fa-rotate-180" title="تسجيلُ الخُروج" tabindex="4"></a>

</nav>

<div class="row">

    <div class="container" style="margin-top: 120px; ">

        <div class="table-responsive table-striped">

            <table class="table table-striped m-0" id="myTable">

                <thead class="thead-dark">
                    <tr>
                        <th scope="col">لم يَحضَرْ رُغم الإنذار</th>
                        <th scope="col">عدد الإنذارات</th>
                        <th scope="col">غيابٌ مُنقَطِعٌ</th>
                        <th scope="col">غيابٌ مُتَصِلٌ</th>
                        <th scope="col" tabindex="1" title="ترتيبُ الجدول">اسمُ الطالب</th>
                        <th scope="col" hidden>#</th>
                    </tr>
                </thead>

                <tbody>

                    @foreach (var student in Model)
                    {

                        <tr>

                            <td>

                                @if (student.IsReject)
                                {
                                    <span class="numberOfAbsentOfStudent" tabindex="1" title="لم يحضر رُغم الإنذار : نعم">نعم</span>
                                }
                                else
                                {
                                    <span class="numberOfAbsentOfStudent" tabindex="1" title="لم يحضر رُغم الإنذار : لا">لا</span>

                                }

                            </td>

                            <td>
                                <span class="numberOfAbsentOfStudent" tabindex="1" title="@student.NumOfReject : عددُ الإنذارات">@student.NumOfReject</span>
                            </td>

                            <td>
                                <span class="numberOfAbsentOfStudent" tabindex="1" title="@student.TimeAbsent : غيابٌ مُنْقَطِعٌ">@student.TimeAbsent</span>
                            </td>

                            <td>
                                <span class="numberOfAbsentOfStudent" tabindex="1" title="@student.TimeAbsentDaily : غِيابٌ مُتْصِلٌ">@student.TimeAbsentDaily</span>
                            </td>

                            <td tabindex="1" title="@student.StudentName">@student.StudentName</td>

                            <th scope="row" hidden>@student.StudentId</th>

                        </tr>

                    }

                </tbody>

            </table>

        </div>

    </div>

</div>

<!-- This is all CSS files for this page -->
<link rel="stylesheet" href="~/css/sumOfAllFiles.css" />
<link rel="stylesheet" href="~/css/timeOfAbsents.css" />
<link rel="stylesheet" href="~/css/studentTable.css" />

<!-- This is all JAVASCRIPT files for this page -->
<script>
    document.getElementById("logo").tabIndex = -1;
    document.getElementById("changeData").tabIndex = -1;
    document.getElementById("outing").tabIndex = -1;

    function goStage() {
        window.open('/Class/Index/' + localStorage.getItem('stageId'), '_self');
    }

    /*========================================================================*/
    //This is for sorting the data in the table alphabetically.
    $(document).ready(function () {
        var getCellValue = function (tr, idx) { return tr.children[idx].innerText || tr.children[idx].textContent; }

        var comparer = function (idx, asc) {
            return function (a, b) {
                return function (v1, v2) {
                    return v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2);
                }(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));
            }
        };

        // do the work...
        Array.prototype.slice.call(document.querySelectorAll('th')).forEach(function (th) {
            th.addEventListener('keypress', function () {
                var table = th.parentNode
                while (table.tagName.toUpperCase() != 'TABLE') table = table.parentNode;
                Array.prototype.slice.call(table.querySelectorAll('tr:nth-child(n+2)'))
                    .sort(comparer(Array.prototype.slice.call(th.parentNode.children).indexOf(th), this.asc = !this.asc))
                    .forEach(function (tr) { table.appendChild(tr) });
            })
        });
    });
</script>